/* Mixin for text styles */
@mixin text-styles($name, $property, $value) {
  &-#{$name} {
    #{$property}: $value;
  }
}

/* Mixin for align items */
@mixin align-styles($name, $value) {
  &-#{$name} {
    align-items: $value;
  }
}

/* Mixin for justify content */
@mixin justify-styles($name, $value) {
  &-#{$name} {
    justify-content: $value;
  }
}

.text {
  @include text-styles(left, text-align, left);
  @include text-styles(center, text-align, center);
  @include text-styles(right, text-align, right);
  @include text-styles(justify, text-align, justify);
  @include text-styles(nowrap, white-space, nowrap);
  @include text-styles(truncate, text-overflow, ellipsis);
  @include text-styles(underline, text-decoration, underline);
  @include text-styles(line-through, text-decoration, line-through);
  @include text-styles(no-underline, text-decoration, none);
  @include text-styles(capitalize, text-transform, capitalize);
  @include text-styles(uppercase, text-transform, uppercase);
  @include text-styles(lowercase, text-transform, lowercase);
}

/* Align items */
.align {
  @include align-styles(left, flex-start);
  @include align-styles(center, center);
  @include align-styles(right, flex-end);
}

/* Justify content */
.justify {
  @include justify-styles(start, flex-start);
  @include justify-styles(end, flex-end);
  @include justify-styles(center, center);
  @include justify-styles(between, space-between);
  @include justify-styles(evently, space-evently);
}

@for $i from 0 to 200 {
  .mg {
    margin: #{$i}px;
  }
  .mt-#{$i} {
    margin-top: #{$i}px;
  }
  .mb-#{$i} {
    margin-bottom: #{$i}px;
  }
  .ml-#{$i} {
    margin-left: #{$i}px;
  }
  .mr-#{$i} {
    margin-right: #{$i}px;
  }
  .pt-#{$i} {
    padding-top: #{$i}px;
  }
  .pb-#{$i} {
    padding-bottom: #{$i}px;
  }
  .pl-#{$i} {
    padding-left: #{$i}px;
  }
  .pr-#{$i} {
    padding-right: #{$i}px;
  }
  .p-#{$i} {
    padding: #{$i}px;
  }
  .px-#{$i} {
    padding-left: #{$i}px;
    padding-right: #{$i}px;
  }
  .py-#{$i} {
    padding-top: #{$i}px;
    padding-bottom: #{$i}px;
  }
}

/* flex */

.t {
  &-flex {
    display: flex;
  }

  &-inline-flex {
    display: inline-flex;
  }

  &-inline-block {
    display: inline-block;
  }

  &-flex-row {
    flex-direction: row;
  }

  &-flex-row-reverse {
    flex-direction: row-reverse;
  }

  &-flex-column {
    flex-direction: column;
  }

  &-flex-column-reverse {
    flex-direction: column-reverse;
  }

  &-flex-wrap {
    flex-wrap: wrap;
  }

  &-flex-nowrap {
    flex-wrap: nowrap;
  }

  &-flex-wrap-reverse {
    flex-wrap: wrap-reverse;
  }

  &-grid {
    display: grid;
  }
}
/* variable $breakpoints-max get from breakpoints file */
@each $prop, $value in $breakpoints-max {
  @include breakpoint-max($prop) {
    .#{$prop}\: {
      &text {
        @include text-styles(left, text-align, left);
        @include text-styles(center, text-align, center);
        @include text-styles(right, text-align, right);
        @include text-styles(justify, text-align, justify);
        @include text-styles(nowrap, white-space, nowrap);
        @include text-styles(truncate, text-overflow, ellipsis);
        @include text-styles(underline, text-decoration, underline);
        @include text-styles(line-through, text-decoration, line-through);
        @include text-styles(no-underline, text-decoration, none);
        @include text-styles(capitalize, text-transform, capitalize);
        @include text-styles(uppercase, text-transform, uppercase);
        @include text-styles(lowercase, text-transform, lowercase);
      }

      /* Align items */
      &align {
        @include align-styles(left, flex-start);
        @include align-styles(center, center);
        @include align-styles(right, flex-end);
      }

      /* Justify content */
      &justify {
        @include justify-styles(start, flex-start);
        @include justify-styles(end, flex-end);
        @include justify-styles(center, center);
        @include justify-styles(between, space-between);
        @include justify-styles(evently, space-evently);
      }
    }

    @include divide-value(w, width, 12);
    @include divide-value(h, height, 12);
  }
}

/* width  */

@include set-value(w, width, 100, '%');

/* height */

@include set-value(h, height, 100, '%');

/* animation */

@include set-value(animation-delay, animation-delay, 30, 's');
@include set-value(animation-duration, animation-duration, 30, 's');
@include set-value(col-gap, column-gap, 200, 'px');
@include set-value(row-gap, row-gap, 200, 'px');
@include set-value(gap, gap, 200, 'px');

/* section padding */

.section {
  padding-top: var(--t-section-padding-top, 50px);
  padding-bottom: var(--t-section-padding-bottom, 50px);

  @include breakpoint-max(md) {
    padding-top: var(--t-section-padding-top-md, 16px);
    padding-bottom: var(--t-section-padding-bottom-md, 16px);
  }
}

/* set width width 12 col */

@include divide-value(w, width, 12);
@include divide-value(h, height, 12);

/* text color */

.text {
  &-white {
    color: var(--t-white-color, #fff);
  }
  &-black {
    color: var(--t-black-color, #222);
  }
}

.hidden {
  display: none;
}

.show {
  display: block;
}
.visibility-hidden {
  transition: all var(--t-duration-default);
  visibility: hidden;
  opacity: 0;
  width: 0 !important;
}
.visibility-visible {
  transition: all var(--t-duration-default);
  visibility: visible;
  opacity: 1;
  width: auto !important;
}

.t-subtitle {
  font-size: 18px;
  font-family: 'T-Font-Heading', sans-serif;
  font-weight: 600;
  margin-bottom: var(--t-subtitle-bottom-spacing, 18px);
  letter-spacing: normal;
}

.t\:column {
  padding-left: calc(var(--column-gap, 0) / 2);
  padding-right: calc(var(--column-gap, 0) / 2);
}

@for $i from 0 to 10 {
  .grid-#{$i}-cols {
    grid-template-columns: repeat(#{$i}, 1fr);
  }
}

.overlay {
  position: absolute;
  inset: 0;
  background: linear-gradient(
    to top,
    rgba(0, 0, 0, 0.4),
    rgba(255, 255, 255, 0)
  ); /* Semi-transparent black background */
  z-index: 10; /* Ensure it is above other content */
  pointer-events: none;
}

.image-full {
  width: 100%;
  height: 100%;
  object-fit: cover;
  inset: 0;
  position: absolute;
}

.t-card__link {
  position: absolute;
  inset: 0;
  z-index: 1;
}

